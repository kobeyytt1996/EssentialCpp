bool fibon_elem( int pos, int &elem )
{
    if (pos < 0 || pos > 1024)
    {
        return false; elem = 0;
    }

    elem = 1;
    int n_2 = 1, n_1 = 1;
    for ( int ix = 3; ix <= pos; ix++)
    {
        elem = n_2 + n_1;
        n_2 = n_1; n_1 = elem;
    }
    return true;
}

#include <iostream>
using namespace std;
bool print_seq ( int pos )
{
    if (pos < 0 || pos > 1024)
    {
        cout << "Unable to show.\n";
        return false;
    }
    cout << "The sequence is: \n\t ";

    switch ( pos )
    {
    default:
    case 2:
        cout << "1 ";
    case 1:
        cout << "1 ";
        break;
    }

    int elem;
    int n_2 = 1, n_1 = 1;
    for ( int ix =3; ix <= pos; ++ix)
    {
        elem = n_2 + n_1;
        n_2 = n_1; n_1 = elem;
        cout << elem << ( !( ix % 10) ? "\n\t" : " ");
    }
    cout << endl;
    return true;

}

bool fibon_elem( int, int& );
bool print_seq( int );

int main()
{
    int pos;
    cout << "Position: ";
    cin >> pos;

    int elem;
    if (fibon_elem( pos, elem ))
        cout << "element # " << pos
        << " is " << elem << endl;
    else
        cout << "Unable to calculate" << endl;

    print_seq( pos );
}
