template <typename iteratorType, typename elem>
iteratorType
find( iteratorType first, iteratorType last, const elem &value)
{
    for ( ; first != last; ++first)
        if (*first == value)
        return first;
    return last;
}

int main()
{
    const int asize = 6;
    int ia[ asize ] = {1, 3, 6, 9, 15, 38};
    
    vector<int> ivec = (ia, ia + asize);
    list<int> ilist = (ia, ia + size);
    
    int *pia = find( ia, ia+asize, 128);
    if ( pia == ia+asize )
        // not found
        
    vector<int>::iterator it;
    it = find( ivec.begin(), ivec.end(), 128);
    if (it == ivec.end())
        // not found
        
    list<int>::iterator iter;
    iter = find( ilist.begin(), ilist.end(), 128);
    if (iter == ilist.end())
        // not found
}
